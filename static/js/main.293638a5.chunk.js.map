{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["items","from","to","numbers","n","push","getNumbers","map","Pagination","total","perPage","currentPage","onPageChange","startItem","checkEnd","endItem","itemsToShow","slice","pagesList","Array","Math","ceil","fill","a","i","className","id","onChange","event","Number","target","value","handleClickSelect","selected","htmlFor","classNames","disabled","href","onClick","page","active","length","togglePage","item","App","useState","setPerPage","setCurrentPage","placeEvent","ReactDOM","render","document","getElementById"],"mappings":"yLAUO,IAAMA,EAVN,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGYG,CAAW,EAAG,IAChCC,KAAI,SAAAH,GAAC,qBAAYA,M,uBCDPI,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYH,GAAWC,EAAc,GACrCG,EAAWJ,EAAUC,EACrBI,EAAUD,EAAWL,EAAQA,EAAQK,EACrCE,EAAchB,EAAMiB,MAAMJ,EAAWE,GACrCG,EAAa,IAAIC,MAAMC,KAC1BC,KAAKZ,EAASC,IACdY,KAAK,GAAGf,KAAI,SAACgB,EAAGC,GAAJ,OAAUA,EAAID,KA+B7B,OACE,sBAAKE,UAAU,YAAf,UACE,wDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAd,EACA,IAJH,SAMG,IACAE,EAAY,EACZ,IARH,IAUG,IACAE,EACA,IAZH,KAcG,IACAN,EAfH,OAmBA,sBAAKgB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRC,GAAG,kBACHD,UAAU,eACVE,SAAU,SAACC,GAAD,OA1DM,SAACA,GACzBhB,EAAaiB,OAAOD,EAAME,OAAOC,OAAQ,UACzCnB,EAAa,EAAG,cAwDaoB,CAAkBJ,IAJzC,UAME,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIE,UAAQ,EAA1B,eACA,wBAAQF,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBT,UAAU,qBAA3C,+BAMF,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UACFU,IAAW,YAAa,CACtBC,SAAUzB,IAAgBO,EAAU,KAFxC,SAME,mBACE,UAAQ,WACRO,UAAU,YACVY,KAAK,QACL,gBAAc,QACdC,QAhFc,WAStB1B,EANoB,IAAhBD,EACWA,EAEAA,EAAc,EAGJ,eAkEnB,oBAUDO,EAAUX,KAAI,SAAAgC,GAAI,OACjB,oBAEEd,UACEU,IAAW,YAAa,CACtBK,OAAQD,IAAS5B,IAJvB,SAQE,mBACE,UAAQ,WACRc,UAAU,YACVY,KAAK,UACLC,QAAS,kBAAM1B,EAAa2B,EAAM,eAJpC,SAMGA,KAbEA,MAkBT,oBAAId,UAAWU,IAAW,YAAa,CACrCC,SAAUzB,IAAgBO,EAAUA,EAAUuB,OAAS,KADzD,SAIE,mBACE,UAAQ,WACRhB,UAAU,YACVY,KAAK,QACL,gBAAc,QACdC,QAtGc,WACtB,IAAII,EAAa,EAGfA,EADE/B,IAAiBO,EAAUuB,OAChB9B,EAEAA,EAAc,EAG7BC,EAAa8B,EAAY,eAwFnB,uBAWJ,6BACG1B,EAAYT,KAAI,SAAAoC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClJrBC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnC,EAAP,KAAgBoC,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlC,EAAP,KAAoBoC,EAApB,KACMtC,EAAQT,EAAMyC,OAepB,OACE,cAAC,EAAD,CACEhC,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAlBgB,SAAC2B,EAAcS,GACjC,OAAQA,GACN,IAAK,SACHF,EAAWP,GACX,MACF,IAAK,aACHQ,EAAeR,QCbvBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.293638a5.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const items = getNumbers(1, 56)\n  .map(n => `Item ${n}`);\n","import classNames from 'classnames';\nimport { items } from '../../utils';\n\nexport interface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number, placeEvent: string)=> void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const startItem = perPage * (currentPage - 1);\n  const checkEnd = perPage * currentPage;\n  const endItem = checkEnd > total ? total : checkEnd;\n  const itemsToShow = items.slice(startItem, endItem);\n  const pagesList = (new Array(Math\n    .ceil(total / (perPage))))\n    .fill(1).map((a, i) => i + a);\n\n  const handleClickSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onPageChange(Number(event.target.value), 'select');\n    onPageChange(1, 'numberPage');\n  };\n\n  const handleArrowPrev = () => {\n    let togglePage = 0;\n\n    if (currentPage === 1) {\n      togglePage = currentPage;\n    } else {\n      togglePage = currentPage - 1;\n    }\n\n    onPageChange(togglePage, 'numberPage');\n  };\n\n  const handleArrowNext = () => {\n    let togglePage = 0;\n\n    if (currentPage === (pagesList.length)) {\n      togglePage = currentPage;\n    } else {\n      togglePage = currentPage + 1;\n    }\n\n    onPageChange(togglePage, 'numberPage');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination </h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {startItem + 1}\n        {' '}\n        -\n        {' '}\n        {endItem}\n        {' '}\n        of\n        {' '}\n        {total}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => handleClickSelect(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <ul className=\"pagination\">\n        <li className={\n          classNames('page-item', {\n            disabled: currentPage === pagesList[0],\n          })\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"false\"\n            onClick={handleArrowPrev}\n          >\n            «\n          </a>\n        </li>\n        {pagesList.map(page => (\n          <li\n            key={page}\n            className={\n              classNames('page-item', {\n                active: page === currentPage,\n              })\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#{page}\"\n              onClick={() => onPageChange(page, 'numberPage')}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames('page-item', {\n          disabled: currentPage === pagesList[pagesList.length - 1],\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={handleArrowNext}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsToShow.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { items } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n\n  const onPageSetup = (page: number, placeEvent: string): void => {\n    switch (placeEvent) {\n      case 'select':\n        setPerPage(page);\n        break;\n      case 'numberPage':\n        setCurrentPage(page);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Pagination\n      total={total}\n      perPage={perPage}\n      currentPage={currentPage}\n      onPageChange={onPageSetup}\n    />\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}